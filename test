<#
.SYNOPSIS
    Installs or uninstalls software silently with detailed logging.

.DESCRIPTION
    This script performs a silent installation of an MSI and an EXE (with the EXE using the "-q" flag)
    while capturing logs for each process in a centralized log folder ("C:\Windows\MITLL\Logs"). Log files
    are named using the application name for easy identification. During uninstallation, it first runs any
    uninstall.exe found in a Cytoscape directory (with logging), then uninstalls the MSI using its product code,
    and always removes a desktop shortcut from the Public Desktop.

.PARAMETER install
    Use this switch to perform the installation.

.PARAMETER uninstall
    Use this switch to perform the uninstallation.

.NOTES
    - The installation files are assumed to be in the same folder as this script.
    - Update "YourInstaller.msi" and "YourInstaller.exe" with the actual file names.
    - Update $appName if needed.
#>

param(
    [switch]$install,
    [switch]$uninstall
)

# Validate that exactly one action is specified
if ($install -and $uninstall) {
    Write-Error "Please specify only one action: -install or -uninstall."
    exit 1
}
if (-not ($install -or $uninstall)) {
    Write-Error "Please specify an action: -install or -uninstall."
    exit 1
}

# Set the log directory and ensure it exists.
$logDirectory = "C:\Windows\Logs"
if (-not (Test-Path $logDirectory)) {
    New-Item -Path $logDirectory -ItemType Directory -Force | Out-Null
}

# Define the application name used for naming log files.
$appName = "Cytoscape"  # <-- Update this value as needed

# Set $PSScript to the directory where the script is located
$PSScript = Split-Path -Parent $MyInvocation.MyCommand.Definition

if ($install) {
    # --------------------------
    # Silent Installation with Logging
    # --------------------------
    
    # MSI silent installation with logging
    $msiPath = Join-Path $PSScript "YourInstaller.msi"  # <-- Replace with your MSI file name
    if (Test-Path $msiPath) {
        $msiLogFile = Join-Path $logDirectory "$appName`_msi_install.log"
        Write-Host "Installing MSI silently from $msiPath. Log file: $msiLogFile"
        Start-Process -FilePath "msiexec.exe" `
                      -ArgumentList "/i `"$msiPath`" /qn /L*V `"$msiLogFile`"" `
                      -Wait -NoNewWindow
    }
    else {
        Write-Host "MSI file not found at $msiPath"
    }

    # EXE silent installation with logging (using -q switch)
    $exePath = Join-Path $PSScript "YourInstaller.exe"  # <-- Replace with your EXE file name
    if (Test-Path $exePath) {
        $exeLogFile = Join-Path $logDirectory "$appName`_exe_install.log"
        Write-Host "Installing EXE silently from $exePath. Log file: $exeLogFile"
        Start-Process -FilePath $exePath `
                      -ArgumentList "-q" `
                      -RedirectStandardOutput $exeLogFile `
                      -RedirectStandardError $exeLogFile `
                      -Wait -NoNewWindow
    }
    else {
        Write-Host "EXE installer not found at $exePath"
    }
}

if ($uninstall) {
    # --------------------------
    # Silent Uninstallation with Logging
    # --------------------------
    
    # First, run uninstall.exe in any Cytoscape_v* directory (using -q with logging)
    $cytoscapeDirs = Get-ChildItem -Path "C:\Program Files" -Directory | Where-Object { $_.Name -like "Cytoscape_v*" }
    if ($cytoscapeDirs) {
        foreach ($dir in $cytoscapeDirs) {
            $uninstallExe = Join-Path $dir.FullName "uninstall.exe"
            if (Test-Path $uninstallExe) {
                $uninstallLog = Join-Path $logDirectory ("$appName" + "_" + $dir.Name + "_uninstall.log")
                Write-Host "Running uninstall.exe from $($dir.FullName). Log file: $uninstallLog"
                Start-Process -FilePath $uninstallExe `
                              -ArgumentList "-q" `
                              -RedirectStandardOutput $uninstallLog `
                              -RedirectStandardError $uninstallLog `
                              -Wait -NoNewWindow
            }
            else {
                Write-Host "uninstall.exe not found in $($dir.FullName)"
            }
        }
    }
    else {
        Write-Host "No directory matching 'Cytoscape_v*' found in C:\Program Files"
    }
    
    # Then, uninstall MSI silently using its product code with logging
    $msiUninstallLogFile = Join-Path $logDirectory "$appName`_msi_uninstall.log"
    Write-Host "Uninstalling MSI with product code {B6031041-8C2C-4294-B525-DBC257A825F0}. Log file: $msiUninstallLogFile"
    Start-Process -FilePath "msiexec.exe" `
                  -ArgumentList "/x {B6031041-8C2C-4294-B525-DBC257A825F0} /qn /L*V `"$msiUninstallLogFile`"" `
                  -Wait -NoNewWindow

    # Always remove the desktop shortcut from Public Desktop
    $commonDesktop = [System.Environment]::GetFolderPath("CommonDesktopDirectory")
    $shortcutPath = Join-Path $commonDesktop "$appName.lnk"  # <-- Update the shortcut name if needed
    if (Test-Path $shortcutPath) {
        Write-Host "Removing desktop shortcut at $shortcutPath..."
        Remove-Item $shortcutPath -Force
    }
    else {
        Write-Host "No desktop shortcut found at $shortcutPath."
    }
}
